version: "3.9"

services:
  client:
    container_name: frontend_web
    restart: always
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    expose:
      - "8080"
    networks:
      - frontend_net
      - proxy_net
    depends_on:
      - server
  server:
    container_name: backend_server
    restart: always
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "5002:5002"
    expose:
      - "5002"
    environment:
      - DB_NAME=test_db_2
      - DB_USER=root
      - DB_PASS=test1223
      - DB_HOST=db
    networks:
      - backend_net
      - proxy_net
    depends_on:
      db:
        condition: service_healthy
  db:
    image: mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=test1223
      - MYSQL_PASSWORD=test1223
      - MYSQL_DATABASE=test_db_2
    ports:
      - "3306:3306"
    expose:
      - "3306"
    volumes:
      - ./data:/var/lib/mysql
    networks:
      - backend_net
      - proxy_net
    healthcheck:
      test: "mysql -uroot -p$$MYSQL_ROOT_PASSWORD  -e 'SHOW databases'"
      interval: 10s
      retries: 3
  # proxy:
  #   image: nginx:alpine
  #   container_name: app-proxy
  #   restart: unless-stopped
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/conf.d/default.conf
  #   ports:
  #     - "8080:80"
  #     - "443:443"
  #   networks:
  #     - proxy_net
  #   depends_on:
  #     - client
networks:
  proxy_net:
  frontend_net:
  backend_net:
    driver: bridge
